on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  deploy:
    name: Deploy application
   # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Build image
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: make build
      - name: Login to container registry
        env:
          SERVICE_PRINCIPAL_APP_ID: ${{ secrets.SERVICE_PRINCIPAL_APP_ID }}
          SERVICE_PRINCIPAL_SECRET: ${{ secrets.SERVICE_PRINCIPAL_SECRET }}
          SERVICE_PRINCIPAL_TENANT: ${{ secrets.SERVICE_PRINCIPAL_TENANT }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: make registry-login
      - name: Push image
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: make push
      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
         # enable-AzPSSession: true
      - name: Azure CLI script
        env:
          CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az aks get-credentials --resource-group $CLUSTER_RESOURCE_GROUP_NAME --name $CLUSTER_NAME --overwrite-existing
          # You can write your Azure CLI inline scripts here. 
     # - name: Get AKS credentials
     #   env:
     #     CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
     #     CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
     #   run: |
     #     az login --service-principal -u $SERVICE_PRINCIPAL_APP_ID -p SERVICE_PRINCIPAL_SECRET --tenant SERVICE_PRINCIPAL_TENANT
     #     az aks get-credentials --resource-group $CLUSTER_RESOURCE_GROUP_NAME --name $CLUSTER_NAME --overwrite-existing
      - name: Deploy application
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: make deploy
